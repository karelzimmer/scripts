Deel 2. If- en while-statements


[1] Werken met if- en while-statements

1. Maak een nieuwe module. Zet daarin als commentaar: if- en while-statements. Sla de module op onder de naam ex2_ifstatements.py.

2. Vraag de gebruiker om zijn voornaam en leeftijd en zet die in gelijknamige variabelen. Toon de variabelen. Bereken de jaren tot het pensioen (67 - leeftijd) en druk af: "Nog .. jaren werken tot het pensioen!" Op de plek van de .. moet het aantal werkjaren komen. Test.

3. Wijzig de code. Als iemand al met pensioen is, moeten de pensioenjaren als positief getal worden getoond in de tekst: "Ah, al .. jaren vrijheid!". Gebruik hiervoor een if-statement.

4. Voeg nieuwe code toe. Druk bij een leeftijd onder de 30 af: "jonkie", tussen 30 en 50: "ervaren", tussen 50 en 60: "uitstekend" en boven de 60: "begint star te worden". 

5. Kopieer de code en zet de originele in commentaar. Dit kan door de code te selecteren en op Alt+3 te drukken, of via het menu Format. De nieuwe versie moet steeds opnieuw om voornaam en leeftijd vragen, tot de gebruiker ipv een naam het woord "stop" intypt. Gebruik hiervoor een while-lus.

6. Voeg onderaan nieuwe code toe en commentarieer de voorgaande uit. Vul de variabelen dag, maand, jaar met getallen voor een datum, bijvoorbeeld 12, 7, 1954. Controleer met code of er sprake is van een geldige datum. April (maand=4) mag bijvoorbeeld geen 31 dagen hebben. In een schrikkeljaar heeft februari 29 dagen, anders 28. Druk de datum af en daarachter: "is een geldige datum" of "is een ongeldige datum".

De regels voor een schrikkeljaar zijn:
* als een jaar deelbaar is door 400, dan schrikkeljaar. Bijvoorbeeld 1600, 2000.
* als een jaar deelbaar is door 100, dan geen schrikkeljaar. Bijvoorbeeld 1700, 1800.
* als een jaar deelbaar is door 4, dan schrikkeljaar. Bijvoorbeeld 2004, 2008.
* alle andere jaren zijn geen schrikkeljaar.
Deze regels moet je op volgorde testen. Gebruik hiervoor de % operator in combinatie met and en or. Gebruik voor het max aantal dagen in april, juni, enz de in-operator in combinatie met een lijst met maandnummers. Zo'n lijst maak je met [] of () en daartussen kommagescheiden de getallen.


[2] Extra oefening (voor wie tijd over heeft)

1. Wie worstelt er niet met zijn gewicht. Zet de voorgaande code in commentaar. Voeg onderaan code toe. Vraag de gebruiker om zijn gewicht in kg en lengte in meters. Gebroken getallen worden opgegeven met decimale punt, dus 1.83 voor 1 meter 83. Invoer kan geconverteerd worden in een gebroken getal met de functie float().
Bereken de BMI (body mass index): bmi is gewicht gedeeld door kwadraat van de lengte.
Druk de bmi af.

2. Als de bmi ligt tussen 28 en 32, druk dan tevens af: "werk aan de winkel".
Als de bmi een hele reeks cijfers achter de decimale punt geeft, kun je afronden met de functie round(getal,aantaldecimalen). Probeer dit uit met bv 2 decimalen.
Je kunt ook afronden met een formaat-optie in print(). De optie %.2f staat voor een gebroken getal (float) met 2 decimalen. Probeer dit uit.
